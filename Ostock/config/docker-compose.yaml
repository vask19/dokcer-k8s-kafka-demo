version: '3'

services:
  config:
    image: config
    container_name: config
    ports:
      - "8071:8071"
    networks:
      backand:
        aliases:
          - "config"

  eureka:
    image: eureka
    container_name: eureka
    hostname: eureka
    profiles:
      - dev
    ports:
      - "8761:8761"
    networks:
      backand:
        aliases:
          - "eureka"
    depends_on:
      - config




  ostock-db:
    image: postgres:12
    container_name: ostock-db
    restart: always

    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ostock_db
      PGDATA: /var/lib/postgresql/data/pgdata

    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - postgres_sql:/var/lib/postgresql/data
      - /Users/vasylkorol/backaps:/var/opt/postgresql/backup

    networks:
      backand:
        aliases:
          - "ostock-db"



  ostock_pgadmin:
    image: dpage/pgadmin4
    container_name: ostock_pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: raj@nola.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - backand

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  redisserver:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      backend:
        aliases:
          - "redis"



  organization:
    container_name: organization
    links:
      - keycloak
    ports:
      - "8085:8085"
    profiles:
      - dev
    image: organization
    networks:
      - backand
    depends_on:
      - config
      - eureka
      - ostock-db


  license:
    image: license
    container_name: license
    ports:
      - "8006:8006"
    profiles:
      - dev
    networks:
      - backand
    depends_on:
      - config
      - eureka
      - ostock-db
  gateway:
    image: gateway
    container_name: gateway
    ports:
      - "8072:8072"
    profiles:
      - dev
    networks:
      - backand
    depends_on:
      - config
      - eureka
#  sleighzy/keycloak:18
  keycloak:
    image: sleighzy/keycloak
    container_name: keycloak
    hostname: keycloak
    restart: always

#    platform: linux/amd64
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
#      JAVA_OPTS: "-Djboss.socket.binding.port-offset=10 -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m
#      -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true"

    volumes:
      - keycloak:/opt/jboss/keycloak
    ports:
      - "8080:8080"
    networks:
      backand:
         aliases:
            - "keycloak"

volumes:
  postgres_sql:
  keycloak:
networks:
  backand:
    driver: bridge
