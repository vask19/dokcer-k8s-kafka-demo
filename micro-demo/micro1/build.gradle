plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id("com.github.davidmc24.gradle.plugin.avro") version "1.2.0"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

generateAvroJava {
    source("${projectDir}/src/main/resources/kinaction_alert.avsc")//sourcepath avrofile
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka
    implementation 'org.springframework.kafka:spring-kafka:3.0.0'
    implementation "org.apache.avro:avro:1.11.0"
//     https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
    implementation 'io.confluent:kafka-avro-serializer:5.3.0'
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation 'org.apache.kafka:kafka-clients:3.3.1'
    testAnnotationProcessor('org.projectlombok:lombok')
}






tasks.named('test') {
    useJUnitPlatform()
}
